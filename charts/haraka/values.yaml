haraka:
  env:
  - name: HARAKA_HOSTLIST
    value: localhost,localhost.kubero.dev
  - name: HARAKA_ME
    value: mynameisnobody
  - name: HARAKA_PLUGINS
    value: helo.checks,mail_from.is_resolvable,rcpt_to.in_host_list,headers,relay_all
  - name: HARAKA_HELO_CHECKS_CHECK
    value: mynameisnobody
  - name: HARAKA_HELO_CHECKS_REJECT
    value: host_mismatch=false,big_company=false,rdns_match=false
  - name: HARAKA_HELO_CHECKS_SKIP
    value: private_ip=false,relaying=true
  - name: HARAKA_LOG_LEVEL
    value: debug
  - name: HARAKA_LOG_TIMESTAMP
    value: false
  - name: HARAKA_LOG_FORMAT
    value: info

replicaCount: 1

image:
  repository: ghcr.io/kubero-dev/haraka
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8025

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
